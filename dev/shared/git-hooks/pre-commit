#!/bin/sh

error() {
    println "\e[1m\e[31m$1\e[0m"
}

section() {
    println "\e[33m[\e[32m\e[1m $1 \e[21m\e[33m]\e[0m"
}

println() {
    printf %b "$1\n"
}

lint() {
    PROJECT=$1
    STAGED_FILES=$2

    section "start php lint"
    println ""

    for FILE in ${STAGED_FILES}; do
        php -l -d display_errors=0 "${PROJECT}"/"${FILE}"

        if [ $? != 0 ]; then
            error "fix the error before commit"
            stop 1
        fi
    done

    println ""
    section "end php lint"
}

code_sniffer() {
    section "start code sniffer"
    println ""

    ./vendor/bin/phpcs --no-cache --encoding=utf-8 -n -p -v -s $1

    if [ $? != 0 ]; then
        error "fix the errors before commit"
        stop 1
    fi

    section "end code sniffer"
}

check_php() {
    php -v >/dev/null 2>&1
    PHP_IS_INSTALLED=$?

    if [ "${PHP_IS_INSTALLED}" -ne 0 ]; then
        error "php is not installed"
        stop 0
    fi
}

stop() {
    section "stop pre commit hook"
    exit $1
}

PROJECT="${PWD}"
STAGED_FILES_CMD=$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\.php)

# determine if a file list is passed
if [ "$#" -eq 1 ]; then
    STAGED_FILES="$1"
fi
STAGED_FILES=${STAGED_FILES:-$STAGED_FILES_CMD}

section "${PROJECT} start pre commit hook"

check_php

if [ "${STAGED_FILES}" != "" ]; then
    lint "${PROJECT}" "${STAGED_FILES}"

    println ""

    code_sniffer "${STAGED_FILES}"
fi

stop $?
